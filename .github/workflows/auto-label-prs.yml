name: Auto-label PRs
on:
  pull_request:
    types: [opened, edited, synchronize]

permissions:
  contents: read
  issues: write
  pull-requests: write

jobs:
  label:
    runs-on: ubuntu-latest
    steps:
      - name: Label based on PR type
        uses: actions/github-script@v6
        with:
          script: |
            const body = (context.payload.pull_request && context.payload.pull_request.body) || '';
            const labels = [];

            if (body.includes('- [x] Bug fix')) labels.push('bug-fix');
            if (body.includes('- [x] New feature')) labels.push('feature');
            if (body.includes('- [x] Enhancement')) labels.push('enhancement');
            if (body.includes('- [x] Documentation update')) labels.push('documentation');
            if (body.includes('- [x] Code refactoring')) labels.push('refactoring');

            const checked = body.match(/- \[x\]/gi) || [];
            const unchecked = body.match(/- \[ \]/g) || [];
            if (checked.length >= 6 && unchecked.length === 0) {
              labels.push('ready-for-review');
            } else {
              labels.push('work-in-progress');
            }

            if (body.toLowerCase().includes('test') &&
                body.includes('- [x] All new and existing tests pass')) {
              labels.push('tested');
            }

            if (body.includes('- [x] I have updated the documentation accordingly')) {
              labels.push('docs-updated');
            }

            if (labels.length) {
              await github.rest.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.payload.pull_request.number,
                labels
              });
            }