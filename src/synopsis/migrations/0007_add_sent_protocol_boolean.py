# Generated by Django 5.2.6 on 2025-09-13 19:15

from django.db import migrations, models


def backfill_sent_protocol_flag(apps, schema_editor):
    """Set the boolean flag when a timestamp exists, if that column is present."""

    table = "synopsis_advisoryboardmember"
    with schema_editor.connection.cursor() as cursor:
        cursor.execute(
            """
            SELECT EXISTS (
                SELECT 1 FROM information_schema.columns
                WHERE table_name = %s AND column_name = %s
            )
            """,
            [table, "sent_protocol_at"],
        )
        has_timestamp = cursor.fetchone()[0]

    if not has_timestamp:
        return

    # Column exists, safe to backfill using SQL for efficiency.
    schema_editor.execute(
        """
        UPDATE synopsis_advisoryboardmember
        SET sent_protocol = TRUE
        WHERE sent_protocol_at IS NOT NULL
        """
    )


def revert_sent_protocol_flag(apps, schema_editor):
    table = "synopsis_advisoryboardmember"
    with schema_editor.connection.cursor() as cursor:
        cursor.execute(
            """
            SELECT EXISTS (
                SELECT 1 FROM information_schema.columns
                WHERE table_name = %s AND column_name = %s
            )
            """,
            [table, "sent_protocol"],
        )
        has_boolean = cursor.fetchone()[0]
        cursor.execute(
            """
            SELECT EXISTS (
                SELECT 1 FROM information_schema.columns
                WHERE table_name = %s AND column_name = %s
            )
            """,
            [table, "sent_protocol_at"],
        )
        has_timestamp = cursor.fetchone()[0]

    if not has_boolean:
        return

    sql = "UPDATE synopsis_advisoryboardmember SET sent_protocol = FALSE"
    if has_timestamp:
        sql += " WHERE sent_protocol_at IS NOT NULL"

    schema_editor.execute(sql)


class Migration(migrations.Migration):
    dependencies = [
        ("synopsis", "0006_add_reminder_sent_boolean"),
    ]

    operations = [
        # Create the boolean column in the DB (idempotent) and register it in Django's state.
        migrations.SeparateDatabaseAndState(
            database_operations=[
                migrations.RunSQL(
                    sql="""
                    ALTER TABLE synopsis_advisoryboardmember
                    ADD COLUMN IF NOT EXISTS sent_protocol boolean DEFAULT FALSE NOT NULL;
                    """,
                    reverse_sql="""
                    ALTER TABLE synopsis_advisoryboardmember
                    DROP COLUMN IF EXISTS sent_protocol;
                    """,
                ),
                migrations.RunPython(
                    backfill_sent_protocol_flag, revert_sent_protocol_flag
                ),
            ],
            state_operations=[
                migrations.AddField(
                    model_name="advisoryboardmember",
                    name="sent_protocol",
                    field=models.BooleanField(default=False),
                ),
            ],
        ),
    ]
